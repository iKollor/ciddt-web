---
interface Props {
	text?: string;
	href?: string;
	colors?: {
		background?: string;
		color?: string;
		colorHover?: string;
		backgroundHover?: string;
		borderColor?: string;
		borderColorHover?: string;
	};
	arrow?: boolean;
}

const { text = 'Contacto', href = '/contact', colors, arrow }: Props = Astro.props;

const background = colors?.background ?? '#f8f1ef';
const color = colors?.color ?? '#163330';
const colorHover = colors?.colorHover ?? '#163330';
const backgroundHover = colors?.backgroundHover ?? '#e0c18c';
const borderColor = colors?.borderColor ?? '#163330';
const borderColorHover = colors?.borderColorHover ?? '#163330';
---

<>
	<style lang="scss" define:vars={{ color, background, colorHover, backgroundHover, borderColor, borderColorHover }}>
		$stripe-height: 7px;
		$btn-color: var(--color);
		$btn-background: var(--background);
		$btn-color-hover: var(--colorHover);
		$btn-background-hover: var(--backgroundHover);
		$border-color: var(--borderColor);
		$border-color-hover: var(--borderColorHover);

		@mixin reset-button {
			overflow: visible;
			margin: 0;
			padding: 0;
			border: 0;
			background: transparent;
			font: inherit;
			line-height: normal;
			cursor: pointer;
			-moz-user-select: text;

			&:-moz-focus-inner {
				padding: 0;
				border: 0;
			}
		}

		@keyframes stripe-slide {
			0% {
				background-position: 0% 0;
			}
			100% {
				background-position: 100% 0;
			}
		}

		.btn {
			@include reset-button;
			display: inline-block;
			text-decoration: none;
			text-transform: uppercase;
			padding: 16px 36px 22px;
			background-color: $btn-background;
			color: $btn-color;
			border: 2px solid $border-color;
			border-radius: 6px;

			&--stripe {
				overflow: hidden;
				position: relative;

				&:after {
					content: '';
					display: block;
					height: $stripe-height;
					width: 100%;
					background-image: repeating-linear-gradient(
						45deg,
						$border-color,
						$border-color 1px,
						transparent 2px,
						transparent 5px
					);
					-webkit-backface-visibility: hidden;
					backface-visibility: hidden;
					border-top: 1px solid $border-color;
					position: absolute;
					left: 0;
					bottom: 0;
					background-size: $stripe-height $stripe-height;
				}

				&:hover {
					background-color: $btn-background-hover;
					color: $btn-color-hover;
					border-color: $border-color-hover;
					&:after {
						background-image: repeating-linear-gradient(
							45deg,
							$btn-color-hover,
							$btn-color-hover 1px,
							transparent 2px,
							transparent 5px
						);
						border-top: 1px solid $border-color-hover;
						animation: stripe-slide 12s linear;
						animation-fill-mode: forwards;
					}
				}
			}

			&--large {
				width: 50%;
			}

			&--radius {
				border-radius: 36px;
			}
		}
	</style>
	<a class="btn btn--stripe scale-90 origin-left group" href={href}
		>{text}
		{
			(arrow ?? false) && (
				<span class="ml-2 transition-all ease-in-out duration-300 group-hover:translate-x-3 inline-block">
					â†’
				</span>
			)
		}
	</a>
</>
