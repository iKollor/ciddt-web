---
import { Image } from 'astro:assets';
import type { UserRecord } from 'firebase-admin/auth';

interface Props {
	userRecord: UserRecord;
}

const { userRecord } = Astro.props;
---

<nav class="h-[80px] w-full fixed top-0 left-0 z-10 my-4">
	<div
		class="m-auto w-3/5 h-full flex items-center justify-between p-8 bg-edgewater-950 bg-opacity-50 backdrop-blur-sm rounded-md"
	>
		<h1 class="title-gradient">Admin Panel</h1>
		<div class="flex justify-center items-center gap-4">
			<p class="opacity-60">Welcome <b>{userRecord?.displayName}</b></p>
			<div class="relative">
				<button type="button" id="dropdownButton">
					<picture class="flex items-center">
						<div class="rounded-full w-[50px] h-[50px] cursor-pointer overflow-hidden">
							<Image
								class="object-cover w-full h-full bg-white"
								src={userRecord?.photoURL ?? 'https://img.icons8.com/?size=256&id=98957&format=png'}
								alt="user_profilePicture"
								width={100}
								height={100}
								transition:name="profilePicture"
								transition:persist
							/>
						</div>
						<svg
							class="h-5 w-5 transition-all ease-in-out duration-300"
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 0 20 20"
							fill="currentColor"
							aria-hidden="true"
						>
							<path
								fill-rule="evenodd"
								d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
								clip-rule="evenodd"></path>
						</svg>
					</picture>
				</button>

				<!-- Opciones del dropdown -->
				<div
					id="dropdown"
					class="h-0 opacity-0 overflow-hidden origin-top-right absolute right-0 w-32 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-0 focus:outline-none transition-all ease-in-out duration-300"
					role="menu"
					aria-orientation="vertical"
					aria-labelledby="dropdownButton"
				>
					<div class="py-1 h-full flex flex-col items-center justify-center" role="none">
						<!-- Opciones -->
						<a
							id="editPhotoButton"
							class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-200 transition-all w-full cursor-pointer"
							role="menuitem">Editar foto</a
						>
						<a
							href="#"
							class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-200 transition-all w-full cursor-pointer"
							role="menuitem">Editar perfil</a
						>
						<a
							id="logoutButton"
							class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-200 transition-all w-full cursor-pointer"
							role="menuitem">Cerrar sesión</a
						>
					</div>
				</div>
			</div>
		</div>
	</div>
</nav>
<script>
	import { navigate } from 'astro:transitions/client';
	import { requestUserInput } from './InputPopup';
	import { popupStore } from 'src/hooks/popupStores';
	import { uploadProfilePicture } from 'src/hooks/useEditProfileManagement';
	import { auth } from '@firebase/client';
	import { loader } from 'src/hooks/pushBody';

	document.addEventListener('astro:page-load', () => {
		const dropdownButton = document.querySelector('#dropdownButton');
		const dropdown = document.querySelector('#dropdown');
		const logoutButton = document.querySelector('#logoutButton');
		const editPhotoButton = document.querySelector('#editPhotoButton');

		logoutButton?.addEventListener('click', () => {
			navigate('/api/auth/signout');
		});

		editPhotoButton?.addEventListener('click', async () => {
			try {
				const files = await requestUserInput(
					'image',
					false,
					'.jpg,.jpeg,.png',
					true,
					12 / 16,
					'Ajusta tu imagen',
					'Recuerda que la imagen que coloques aquí estará en la sección equipo de tu página',
				);

				if (files instanceof File && auth.currentUser != null) {
					loader.set({
						isLoading: true,
						message: 'Subiendo imagen...',
						type: 'infinite',
					});
					// Si se devuelve un único archivo, lo subimos
					if (auth.currentUser != null) {
						const success = await uploadProfilePicture(files, auth.currentUser);
						if (success) {
							// reload the page to update the profile picture
							location.reload();
							popupStore.set({
								visible: true,
								message: 'La foto de perfil se ha actualizado correctamente',
								type: 'success',
								title: 'Foto de perfil actualizada',
							});
						}
					} else {
						throw new Error(
							'No se ha podido obtener el usuario actual, por favor, recargue la página o vuelva a iniciar sesión',
						);
					}
				} else {
					// Manejar el caso de que no se haya devuelto un archivo
					throw new Error('No se seleccionó ningún archivo');
				}
			} catch (error: any) {
				const userClosed = error.cause?.userClosed ? false : true;

				popupStore.set({
					visible: userClosed,
					message: error.message,
					type: 'danger',
					title: 'Error al subir la imagen',
				});
			} finally {
				loader.set({
					isLoading: false,
					message: '',
					type: 'infinite',
				});
			}
		});

		dropdownButton?.addEventListener('click', (e) => {
			e.stopPropagation();
			// Toggle dropdown height using tailwind classes from 0 to auto and opacity from 0 to 100
			dropdown?.classList.toggle('h-0');
			dropdown?.classList.toggle('h-32');
			dropdown?.classList.toggle('opacity-0');
			dropdown?.classList.toggle('opacity-100');

			// Rotate dropdown button svg
			dropdownButton?.querySelector('svg')?.classList.toggle('rotate-180');
		});
	});
</script>

<style>
	.title-gradient {
		font-weight: bold;
		font-size: 3rem;
		background: linear-gradient(to right, #44887d, #112221);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}
</style>
