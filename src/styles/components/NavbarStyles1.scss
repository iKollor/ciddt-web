@import '../GlobalVariables.scss';

.noAnimate {
	transition: none !important;
}

.navbar {
	z-index: 1000;
	width: 100%;
	height: 100px;
	display: inline-block;
	position: fixed;
	.navbar__container {
		margin: auto;
		width: 93%;
		height: 100%;
		display: flex;
		justify-content: space-between;
		align-items: center;
		.navbar__menu {
			display: flex;
			align-items: center;
			gap: 1rem;
			.button-container {
				a {
					font-size: 18px;
					font-weight: 500;
					position: relative;
				}
				a::after {
					content: '';
					position: absolute;
					bottom: -4px;
					left: 0;
					width: 0;
					height: 1px;
					background-color: $white;
					opacity: 0;
					transition:
						width 0.3s ease,
						opacity 0.3s ease-in;
				}
				a:hover::after {
					width: 100%;
					opacity: 1;
				}
			}
		}
		.navbar__logo {
			&:hover {
				img.isotipo {
					rotate: 0deg;
				}
			}
			a {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				img.isotipo {
					width: 40px;
					height: 40px;
					transition: rotate $duration $easeInOutCubic;
					rotate: 180deg;
					filter: brightness(0) invert(1);
					&.red {
						filter: none;
					}
				}
				img.logo_texto {
					width: 50px;
					height: 13px;
					opacity: 0;
					transform: translateX(-50px);
					transition: all $duration $easeInOutCubic;
					filter: brightness(0) invert(1);
					&.red {
						filter: none;
					}
				}
				&:hover {
					img.logo_texto {
						transform: translateX(0);
						opacity: 1;
					}
				}
			}
		}
	}
	input#menu {
		display: none;
	}
	label {
		margin: 1rem;
		display: none;
		position: fixed;
		top: 1rem;
		right: 1rem;
		z-index: 2;
		cursor: pointer;
	}
}

.navbar.menuBar {
	label {
		display: block;
	}
	.navbar__container {
		.navbar__menu {
			position: absolute;
			height: 100svh;
			width: $navbar_menu_width;
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			padding: 0px 0;
			gap: 0;
			pointer-events: none;
			.footer {
				height: 40%;
				width: 100%;
				background-color: $bg;
				transform: translateX(100vw);
				transition: all $duration cubic-bezier(0.23, 0.82, 0.17, 1.03);
				transition-delay: 0.3s;
			}
			.button-container {
				width: 100%;
				flex: 1;
				display: flex;
				align-items: center;
				justify-content: center;
				margin: 0;
				transform: translateX(100vw) !important;
				opacity: 1;
				background-color: $bg;
				transition:
					transform $duration cubic-bezier(0.23, 0.82, 0.17, 1.03),
					background-color 0.3s ease 0s,
					padding-left 0.3s $easeInOutCubic 0s;

				// Añadiendo delay incremental solo para la propiedad transform
				&:nth-child(1) {
					transition-delay: 0.05s, 0s, 0s, 0s; // Aquí especifico que el transform tiene 0.1s de delay y el background-color 0s
				}
				&:nth-child(2) {
					transition-delay: 0.1s, 0s, 0s, 0s;
				}
				&:nth-child(3) {
					transition-delay: 0.15s, 0s, 0s, 0s;
				}
				&:nth-child(4) {
					transition-delay: 0.2s, 0s, 0s, 0s;
				}
				&:nth-child(5) {
					transition-delay: 0.25s, 0s, 0s, 0s;
				}

				&::before {
					content: '';
					position: absolute;
					bottom: 0;
					left: 0;
					right: 0;
					height: 2%; // Inicialmente, el "borde" tendrá una altura de 3.5
					background-color: $white; // Color del "borde"
					z-index: -1; // Coloca el "borde" detrás del contenido del elemento
					transition:
						height 0.3s ease,
						background-color 0.3s ease; // Transición suave
				}
				padding-left: 15%;
				&:hover {
					cursor: pointer;
					padding-left: 25%;
					&::before {
						background-color: $rojo;
						height: 100%; // El "borde" crece hacia arriba (hacia el interior del elemento)
					}
					a {
						color: $white;
						font-weight: 800;
						&::before {
							//linea
							width: 20%;
						}
						&::after {
							//circulo
							left: 20%;
						}
					}
				}
				&.selected {
					cursor: pointer;
					padding-left: 25%;
					&::before {
						background-color: $rojo;
						height: 100%; // El "borde" crece hacia arriba (hacia el interior del elemento)
					}
					a {
						font-weight: 800;
						&::before {
							//linea
							width: 20%;
						}
						&::after {
							//circulo
							left: 20%;
						}
					}
				}
				a {
					display: flex;
					align-items: center;
					justify-content: flex-start;
					width: 100%;
					height: 100%;
					text-align: left;
					font-size: 2vw;
					font-family: 'Bruta Pro Extended', sans-serif;
					font-weight: 500;
					text-transform: capitalize;
					transition: all 0.3;
					&::before {
						// Linea inicial
						content: '';
						position: absolute;
						left: 0;
						width: 10%; // Largo de la linea (debe ser el mismo valor que el left del ::after)
						height: 0.2vw;
						background-color: $white;
						transition: width 0.3s $easeInOutCubic;
					}
					&::after {
						// Circulo inicial
						content: '';
						position: absolute;
						left: 10%; // Posiciona el circulo al final de la linea
						width: 1vw;
						height: 1vw;
						border-radius: 50%;
						background-color: $white;
						transition: left 0.3s $easeInOutCubic;
					}
				}
			}
			.button-container:nth-last-child(1) {
				border-bottom: $white 0 solid;
				&:hover::before {
					height: 100%;
				}
			}
			left: 0;
			top: 0;
		}
	}
}
.navbar.menuBar.displayMenu {
	.navbar__container {
		.navbar__menu {
			.button-container {
				transform: translateX(99.75vw - $navbar_menu_width) !important;
				pointer-events: all;
			}
			.footer {
				transform: translateX(99.75vw - $navbar_menu_width) !important;
			}
		}
	}
}
